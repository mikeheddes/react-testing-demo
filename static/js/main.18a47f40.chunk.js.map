{"version":3,"sources":["components/Other.jsx","components/Counter.jsx","components/ScreenWidth.jsx","components/PageURL.jsx","components/ReminderItem.jsx","components/Reminder.jsx","App.js","serviceWorker.js","index.js"],"names":["textStyle","css","_templateObject","Wrapper","styled","div","_templateObject2","_ref","color","propTypes","PropTypes","string","defaultProps","Label","span","_templateObject3","Button","button","_templateObject4","Line","_templateObject5","StyledButton","Counter_templateObject","StyledLine","Counter_templateObject2","Counter","state","value","handleDecreaseCount","_this","setState","handleIncreaseCount","this","react_default","a","createElement","data-testid","onClick","Component","WrappedComponent","withScreenWidth","width","_Component","_class","props","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","window","innerWidth","handleResize","bind","assertThisInitialized","updating","inherits","createClass","key","addEventListener","removeEventListener","_this2","requestAnimationFrame","assign","StyledLink","Link","PageURL_templateObject","PageURL","pathname","location","nextUrl","to","alt","title","Math","random","toString","slice","withRouter","ItemWrapper","ReminderItem_templateObject","StyledLabel","ReminderItem_templateObject2","ReminderItem_templateObject3","Rotate","ReminderItem_templateObject4","ToDoItem","children","onRemove","ReminderItem_StyledButton","Input","Reminder_templateObject","ToDoWrapper","Reminder_templateObject2","Reminder","input","React","createRef","reminders","addReminder","label","indexOf","toConsumableArray","concat","removeReminder","i","splice","focusInput","current","focus","handleInputChange","e","target","handleKeyPress","_this$state","Fragment","as","type","placeholder","ref","onMouseEnter","onChange","onKeyPress","map","reminder","ReminderItem","Box","App_templateObject","Title","h2","App_templateObject2","App","HashRouter","components_Counter","components_ScreenWidth","components_PageURL","components_Reminder","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.18a47f40.chunk.js","sourcesContent":["import styled, { css } from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nexport const textStyle = css`\n  color: white;\n  font-weight: 500;\n  font-size: 42px;\n  padding: 39px 50px;\n`;\n\nconst Wrapper = styled.div`\n  background-color: ${({ color }) => color};\n  position: relative;\n  box-shadow: 8px 8px rgba(0, 0, 0, 0.15);\n`;\n\nWrapper.propTypes = {\n  color: PropTypes.string\n};\n\nWrapper.defaultProps = {\n  color: \"#d8d8d8\"\n};\n\nexport { Wrapper };\n\nconst Label = styled.span`\n  display: block;\n  text-align: center;\n  ${textStyle};\n`;\n\nexport { Label };\n\nconst Button = styled.button`\n  ${textStyle};\n  appearance: none;\n  border: none;\n  outline: none;\n  background-color: transparent;\n  user-select: none;\n  cursor: pointer;\n\n  &:active {\n    opacity: 0.5;\n  }\n`;\n\nexport { Button };\n\nconst Line = styled.div`\n  width: 5px;\n  background-color: white;\n  flex: 0 0 auto;\n`;\n\nexport { Line };\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Wrapper, Label, Button, Line } from \"./Other\";\n\nconst StyledButton = styled(Button)`\n  width: 50%;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  z-index: 0;\n\n  &:first-of-type {\n    text-align: left;\n    left: 0;\n    right: 50%;\n  }\n\n  &:last-of-type {\n    text-align: right;\n    left: 50%;\n    right: 0;\n  }\n`;\n\nconst StyledLine = styled(Line)`\n  position: absolute;\n  left: calc(50% - 5px / 2);\n  height: 28px;\n\n  &:first-of-type {\n    top: 0;\n  }\n\n  &:last-of-type {\n    bottom: 0;\n  }\n`;\n\nclass Counter extends Component {\n  state = { value: 0 };\n\n  handleDecreaseCount = () => {\n    this.setState({ value: this.state.value - 1 });\n  };\n\n  handleIncreaseCount = () => {\n    this.setState({ value: this.state.value + 1 });\n  };\n\n  render() {\n    const { value } = this.state;\n    return (\n      <Wrapper color=\"#eb4b4b\">\n        <StyledButton data-testid=\"dec\" onClick={this.handleDecreaseCount}>\n          -\n        </StyledButton>\n        <Label>{value}</Label>\n        <StyledButton data-testid=\"inc\" onClick={this.handleIncreaseCount}>\n          +\n        </StyledButton>\n        <StyledLine />\n        <StyledLine />\n      </Wrapper>\n    );\n  }\n}\n\nexport default Counter;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Wrapper, Label } from \"./Other\";\n\nfunction withScreenWidth(WrappedComponent) {\n  return class extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        width: window.innerWidth\n      };\n      this.handleResize = this.handleResize.bind(this);\n      // Keep separate from state because a change should not cause a rerender\n      this.updating = false;\n    }\n\n    componentDidMount() {\n      window.addEventListener(\"resize\", this.handleResize);\n    }\n\n    componentWillUnmount() {\n      window.removeEventListener(\"resize\", this.handleResize);\n    }\n\n    handleResize() {\n      if (this.updating) return;\n      this.updating = true;\n\n      requestAnimationFrame(() => {\n        this.setState({ width: window.innerWidth }, () => {\n          this.updating = false;\n        });\n      });\n    }\n\n    render() {\n      return <WrappedComponent width={this.state.width} {...this.props} />;\n    }\n  };\n}\n\nexport const ScreenWidth = ({ width }) => (\n  <Wrapper color=\"#855FEB\">\n    <Label>{width} px</Label>\n  </Wrapper>\n);\n\nScreenWidth.propTypes = {\n  width: PropTypes.number.isRequired\n};\n\nexport default withScreenWidth(ScreenWidth);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport { Wrapper, Label } from \"./Other\";\n\nexport function createRandomString() {\n  return Math.random()\n    .toString(26)\n    .slice(3, 8);\n}\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const PageURL = ({ location: { pathname }, nextUrl }) => (\n  <StyledLink\n    to={typeof nextUrl === \"function\" ? nextUrl() : nextUrl}\n    alt=\"Click for new random url\"\n    title=\"Click for new random url\"\n  >\n    <Wrapper color=\"#FAA138\">\n      <Label>URL: {pathname}</Label>\n    </Wrapper>\n  </StyledLink>\n);\n\nPageURL.propTypes = {\n  nextUrl: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired\n  }).isRequired\n};\n\nPageURL.defaultProps = {\n  nextUrl: createRandomString\n};\n\nexport default withRouter(PageURL);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nimport { Wrapper, Label, Button, Line } from \"./Other\";\n\nconst ItemWrapper = styled(Wrapper)`\n  margin: 30px 0;\n  display: flex;\n  flex-direction: row;\n`;\n\nconst StyledLabel = styled(Label)`\n  padding: 20px 30px;\n  font-size: 34px;\n  flex: 1 1 auto;\n  text-align: left;\n`;\n\nconst StyledButton = styled(Button)`\n  padding: 20px 30px;\n  font-size: 34px;\n`;\n\nconst Rotate = styled.span`\n  transform: rotate(45deg);\n  transform-origin: center;\n  display: inline-block;\n`;\n\nconst ToDoItem = ({ children, onRemove }) => (\n  <ItemWrapper color=\"#495265\">\n    <StyledLabel>{children}</StyledLabel>\n    <Line />\n    <StyledButton onClick={onRemove}>\n      <Rotate>+</Rotate>\n    </StyledButton>\n  </ItemWrapper>\n);\n\nToDoItem.propTypes = {\n  children: PropTypes.string.isRequired,\n  onRemove: PropTypes.func.isRequired\n};\n\nexport default ToDoItem;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\n\nimport { Wrapper, Label, Button, Line } from \"./Other\";\nimport Item from \"./ReminderItem\";\n\nconst Input = styled(Label)`\n  text-align: left;\n  appearance: none;\n  border: none;\n  outline: none;\n  background-color: transparent;\n  flex: 1 1 auto;\n  min-width: 0px;\n\n  &::placeholder {\n    color: white;\n    opacity: 0.7;\n  }\n`;\n\nconst ToDoWrapper = styled(Wrapper)`\n  display: flex;\n  flex-direction: row;\n`;\n\nclass Reminder extends Component {\n  input = React.createRef();\n\n  state = { reminders: [\"Buy an apple\"], value: \"\" };\n\n  addReminder = () => {\n    const label = this.state.value;\n    if (!label) return;\n    if (this.state.reminders.indexOf(label) !== -1) return;\n    this.setState({\n      reminders: [...this.state.reminders, label],\n      value: \"\"\n    });\n  };\n\n  removeReminder = i => {\n    const reminders = [...this.state.reminders];\n    reminders.splice(i, 1);\n    this.setState({ reminders });\n  };\n\n  focusInput = () => {\n    this.input.current.focus();\n  };\n\n  handleInputChange = e => {\n    this.setState({ value: e.target.value });\n  };\n\n  handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      this.addReminder();\n    }\n  };\n\n  render() {\n    const { reminders, value } = this.state;\n    return (\n      <>\n        <ToDoWrapper color=\"#3F79FC\">\n          <Input\n            as=\"input\"\n            type=\"text\"\n            value={value}\n            placeholder=\"What to do...\"\n            ref={this.input}\n            onMouseEnter={this.focusInput}\n            onChange={this.handleInputChange}\n            onKeyPress={this.handleKeyPress}\n          />\n          <Line />\n          <Button onClick={this.addReminder}>+</Button>\n        </ToDoWrapper>\n\n        {reminders.map((reminder, i) => (\n          <Item onRemove={() => this.removeReminder(i)} key={reminder}>\n            {reminder}\n          </Item>\n        ))}\n      </>\n    );\n  }\n}\n\nexport default Reminder;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { HashRouter } from \"react-router-dom\";\n\nimport Counter from \"./components/Counter\";\nimport ScreenWidth from \"./components/ScreenWidth\";\nimport PageURL from \"./components/PageURL\";\nimport Reminder from \"./components/Reminder\";\n\nconst Box = styled.div`\n  width: 100%;\n  max-width: 500px;\n  margin: 80px auto;\n`;\n\nconst Title = styled.h2`\n  text-align: center;\n  margin-bottom: 30px;\n  font-weight: 600;\n  font-size: 42px;\n  color: #222;\n`;\n\nconst App = () => (\n  <HashRouter>\n    <>\n      <Box>\n        <Title>Counter</Title>\n        <Counter />\n      </Box>\n      <Box>\n        <Title>ScreenWidth</Title>\n        <ScreenWidth />\n      </Box>\n      <Box>\n        <Title>PageURL</Title>\n        <PageURL />\n      </Box>\n      <Box>\n        <Title>Reminder</Title>\n        <Reminder />\n      </Box>\n    </>\n  </HashRouter>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}